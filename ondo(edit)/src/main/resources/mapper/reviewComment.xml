<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.review.comment.ReviewCommentDAO">

    <resultMap type="com.example.demo.review.comment.ReviewCommentTblVO" id="reviewCommentMap">
        <result property="replyToUserId" column="REPLYTO_USERID" />
        
        <result property="seq"           column="SEQ" />
        <result property="userId"        column="USERID" />
        <result property="reviewCode"    column="REVIEWCODE" />
        <result property="comments"      column="COMMENTS" />
        <result property="regDate"       column="REGDATE" />
        <result property="regOrder"      column="REGORDER" />
        <result property="replyLev"      column="REPLYLEV" />
        <result property="replyTo"       column="REPLYTO" />
        <result property="sortOrder"     column="SORTORDER" />
    </resultMap>

    <insert id="writeReviewComment">
        INSERT INTO REVIEW_COMMENT_TBL (SEQ, USERID, REVIEWCODE, COMMENTS, REGDATE, REGORDER, REPLYLEV, REPLYTO, SORTORDER) VALUES
        ((SELECT NVL(MAX(SEQ), 0)+1 AS SEQ FROM REVIEW_COMMENT_TBL), #{userId}, #{reviewCode}, #{comments},
        SYSDATE, (SELECT NVL(MAX(REGORDER), 0)+1 AS REGORDER FROM REVIEW_COMMENT_TBL WHERE REVIEWCODE=#{reviewCode}), 0, 0,
        (SELECT NVL(MAX(SORTORDER), 0)+1 AS SORTORDER FROM REVIEW_COMMENT_TBL WHERE REVIEWCODE=#{reviewCode}))
    </insert>

    <select id="selectCommentCount" resultType="int">
        SELECT COUNT(*) FROM REVIEW_COMMENT_TBL WHERE REVIEWCODE=#{reviewCode}
    </select>

    <select id="selectCommentList" resultMap="reviewCommentMap">
        SELECT * FROM REVIEW_COMMENT_TBL WHERE REVIEWCODE=#{reviewCode} ORDER BY SORTORDER
    </select>

    <delete id="deleteReviewComment">
        DELETE FROM REVIEW_COMMENT_TBL WHERE REVIEWCODE=#{reviewCode} AND SORTORDER=#{sortOrder}
    </delete>

    <update id="updateSeqDueDelete">
        UPDATE REVIEW_COMMENT_TBL
        SET SEQ = (SEQ - 1) WHERE SEQ <![CDATA[>]]> #{seq}
    </update>

    <update id="updateRegorderDueDelete">
        UPDATE REVIEW_COMMENT_TBL
        SET REGORDER = (REGORDER - 1) WHERE REVIEWCODE = #{reviewCode} AND REPLYLEV = 0
    </update>

    <update id="updateSortorderDueDelete">
        UPDATE REVIEW_COMMENT_TBL
        SET SORTORDER = (SORTORDER - 1) WHERE REVIEWCODE = #{reviewCode} AND SORTORDER <![CDATA[>]]> #{sortOrder}
    </update>

    <select id="findReplyId" resultMap="reviewCommentMap">
        SELECT RCT.*,
            (SELECT RCT2.USERID
            FROM REVIEW_COMMENT_TBL RCT2
            WHERE RCT2.SEQ = RCT.REPLYTO) AS REPLYTO_USERID
        FROM REVIEW_COMMENT_TBL RCT
        WHERE RCT.REVIEWCODE = #{reviewCode} AND RCT.SEQ = #{seq}
        ORDER BY RCT.SORTORDER
    </select>

    <update id="editOneReviewComment">
        UPDATE REVIEW_COMMENT_TBL
        SET COMMENTS = #{comments} WHERE REVIEWCODE = #{reviewCode} AND SEQ = #{seq}
    </update>

    <insert id="insertReplyComment">
        INSERT INTO REVIEW_COMMENT_TBL (SEQ, USERID, REVIEWCODE, COMMENTS, REGDATE, REGORDER, REPLYLEV, REPLYTO, SORTORDER) VALUES
        ((SELECT NVL(MAX(SEQ), 0)+1 AS SEQ FROM REVIEW_COMMENT_TBL), #{userId}, #{reviewCode}, #{comments}, SYSDATE, #{regOrder},
        (SELECT NVL(MAX(REPLYLEV), 0)+1 AS REPLYLEV FROM REVIEW_COMMENT_TBL WHERE REVIEWCODE=#{reviewCode}), #{replyTo},
        (SELECT NVL(MAX(SORTORDER), 0)+1 AS SORTORDER FROM REVIEW_COMMENT_TBL WHERE REVIEWCODE=#{reviewCode} AND REGORDER=#{regOrder}))
    </insert>

    <select id="selectMaxSeq" resultType="Integer">
        SELECT NVL(MAX(SEQ), 0) AS SEQ FROM REVIEW_COMMENT_TBL
    </select>

    <select id="selectCommentBySeq" resultMap="reviewCommentMap">
        SELECT * FROM REVIEW_COMMENT_TBL WHERE SEQ=#{seq}
    </select>

    <update id="updateSortorderDueInsert">
        UPDATE REVIEW_COMMENT_TBL
        SET SORTORDER = (SORTORDER + 1) WHERE REVIEWCODE = #{reviewCode} AND 
        SORTORDER <![CDATA[>]]> (SELECT MAX(SORTORDER) FROM REVIEW_COMMENT_TBL WHERE REVIEWCODE = #{reviewCode} AND REGORDER = #{regOrder})
    </update>

    <update id="updateReplylevDueDelete">
        UPDATE REVIEW_COMMENT_TBL
        SET REPLYLEV= (REPLYLEV - 1)
        WHERE REVIEWCODE = #{reviewCode} AND REGORDER = #{regOrder} AND REPLYLEV <![CDATA[>]]> #{replyLev}
    </update>

</mapper>